<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="2" total="29" passed="26" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-04-01T11:41:46 IST" name="NASuite" finished-at="2022-04-01T12:01:15 IST" duration-ms="1168752">
    <groups>
    </groups>
    <test started-at="2022-04-01T11:41:46 IST" name="NASmoke" finished-at="2022-04-01T12:01:15 IST" duration-ms="1168752">
      <class name="NetAgentSmoke.NetAgentProcess">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:41:41 IST" name="beforeMethod" finished-at="2022-04-01T11:41:46 IST" duration-ms="4445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="Login()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:41:46 IST" name="Login" finished-at="2022-04-01T11:42:09 IST" duration-ms="23309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Login -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:09 IST" name="testMethodName" finished-at="2022-04-01T11:42:09 IST" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.ContactUs() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ContactUs()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:09 IST" name="ContactUs" finished-at="2022-04-01T11:42:13 IST" duration-ms="3790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ContactUs -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:13 IST" name="getResult" finished-at="2022-04-01T11:42:13 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ContactUs status=SUCCESS method=NetAgentProcess.ContactUs()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="AgentTSA()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:13 IST" name="AgentTSA" finished-at="2022-04-01T11:42:23 IST" duration-ms="10161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentTSA -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:13 IST" name="testMethodName" finished-at="2022-04-01T11:42:13 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.AgentTSA() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:23 IST" name="getResult" finished-at="2022-04-01T11:42:24 IST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentTSA status=SUCCESS method=NetAgentProcess.AgentTSA()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:24 IST" name="testMethodName" finished-at="2022-04-01T11:42:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.AgentRisk() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentRisk()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:24 IST" name="AgentRisk" finished-at="2022-04-01T11:42:48 IST" duration-ms="24774" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentRisk -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:48 IST" name="getResult" finished-at="2022-04-01T11:42:49 IST" duration-ms="170" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentRisk status=SUCCESS method=NetAgentProcess.AgentRisk()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="OrderSearch()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:49 IST" name="OrderSearch" finished-at="2022-04-01T11:43:12 IST" duration-ms="23601" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OrderSearch -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:42:49 IST" name="testMethodName" finished-at="2022-04-01T11:42:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.OrderSearch() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:12 IST" name="getResult" finished-at="2022-04-01T11:43:13 IST" duration-ms="313" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OrderSearch status=SUCCESS method=NetAgentProcess.OrderSearch()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:13 IST" name="testMethodName" finished-at="2022-04-01T11:43:13 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.replenish() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="replenish()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:13 IST" name="replenish" finished-at="2022-04-01T11:43:45 IST" duration-ms="31960" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- replenish -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:45 IST" name="getResult" finished-at="2022-04-01T11:43:45 IST" duration-ms="186" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=replenish status=SUCCESS method=NetAgentProcess.replenish()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:45 IST" name="testMethodName" finished-at="2022-04-01T11:43:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.CycleCount() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="CycleCount()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:45 IST" name="CycleCount" finished-at="2022-04-01T11:43:49 IST" duration-ms="4074" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CycleCount -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:49 IST" name="getResult" finished-at="2022-04-01T11:43:49 IST" duration-ms="194" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CycleCount status=SUCCESS method=NetAgentProcess.CycleCount()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:49 IST" name="testMethodName" finished-at="2022-04-01T11:43:49 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.Courier() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="Courier()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:49 IST" name="Courier" finished-at="2022-04-01T11:43:57 IST" duration-ms="7645" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Courier -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:57 IST" name="getResult" finished-at="2022-04-01T11:43:57 IST" duration-ms="214" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Courier status=SUCCESS method=NetAgentProcess.Courier()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:57 IST" name="testMethodName" finished-at="2022-04-01T11:43:57 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.parts() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="parts()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:43:57 IST" name="parts" finished-at="2022-04-01T11:45:15 IST" duration-ms="78276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parts -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:15 IST" name="getResult" finished-at="2022-04-01T11:45:15 IST" duration-ms="189" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=parts status=SUCCESS method=NetAgentProcess.parts()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:15 IST" name="testMethodName" finished-at="2022-04-01T11:45:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.FSLStorage() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="FSLStorage()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:15 IST" name="FSLStorage" finished-at="2022-04-01T11:45:21 IST" duration-ms="5907" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FSLStorage -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:21 IST" name="getResult" finished-at="2022-04-01T11:45:21 IST" duration-ms="157" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FSLStorage status=SUCCESS method=NetAgentProcess.FSLStorage()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:21 IST" name="testMethodName" finished-at="2022-04-01T11:45:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.FSLSetup() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="FSLSetup()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:45:21 IST" name="FSLSetup" finished-at="2022-04-01T11:46:32 IST" duration-ms="70712" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- FSLSetup -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:32 IST" name="getResult" finished-at="2022-04-01T11:46:32 IST" duration-ms="252" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=FSLSetup status=SUCCESS method=NetAgentProcess.FSLSetup()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:32 IST" name="testMethodName" finished-at="2022-04-01T11:46:32 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.CycleCountBIN() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="CycleCountBIN()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:32 IST" name="CycleCountBIN" finished-at="2022-04-01T11:46:45 IST" duration-ms="12543" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CycleCountBIN -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:45 IST" name="getResult" finished-at="2022-04-01T11:46:45 IST" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CycleCountBIN status=SUCCESS method=NetAgentProcess.CycleCountBIN()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:45 IST" name="testMethodName" finished-at="2022-04-01T11:46:45 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.ASNLog() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ASNLog()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:46:45 IST" name="ASNLog" finished-at="2022-04-01T11:48:26 IST" duration-ms="101132" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ASNLog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:26 IST" name="getResult" finished-at="2022-04-01T11:48:26 IST" duration-ms="181" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ASNLog status=SUCCESS method=NetAgentProcess.ASNLog()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:26 IST" name="testMethodName" finished-at="2022-04-01T11:48:26 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.AgentActivityReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:26 IST" name="AgentActivityReport" finished-at="2022-04-01T11:48:45 IST" duration-ms="18587" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:45 IST" name="getResult" finished-at="2022-04-01T11:48:45 IST" duration-ms="251" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityReport status=SUCCESS method=NetAgentProcess.AgentActivityReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:45 IST" name="testMethodName" finished-at="2022-04-01T11:48:45 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.AgentActivityChartReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityChartReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:45 IST" name="AgentActivityChartReport" finished-at="2022-04-01T11:48:56 IST" duration-ms="10612" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityChartReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:56 IST" name="getResult" finished-at="2022-04-01T11:48:56 IST" duration-ms="159" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityChartReport status=SUCCESS method=NetAgentProcess.AgentActivityChartReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:56 IST" name="testMethodName" finished-at="2022-04-01T11:48:56 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.quarantineReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="quarantineReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:48:56 IST" name="quarantineReport" finished-at="2022-04-01T11:49:03 IST" duration-ms="7439" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quarantineReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:03 IST" name="getResult" finished-at="2022-04-01T11:49:04 IST" duration-ms="206" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=quarantineReport status=SUCCESS method=NetAgentProcess.quarantineReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:04 IST" name="testMethodName" finished-at="2022-04-01T11:49:04 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.AgentActivityDetailReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="AgentActivityDetailReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:04 IST" name="AgentActivityDetailReport" finished-at="2022-04-01T11:49:15 IST" duration-ms="11210" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AgentActivityDetailReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:15 IST" name="getResult" finished-at="2022-04-01T11:49:15 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AgentActivityDetailReport status=SUCCESS method=NetAgentProcess.AgentActivityDetailReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:15 IST" name="testMethodName" finished-at="2022-04-01T11:49:15 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.ReceiptReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="ReceiptReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:15 IST" name="ReceiptReport" finished-at="2022-04-01T11:49:40 IST" duration-ms="24685" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ReceiptReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:40 IST" name="getResult" finished-at="2022-04-01T11:49:40 IST" duration-ms="185" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ReceiptReport status=SUCCESS method=NetAgentProcess.ReceiptReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:40 IST" name="testMethodName" finished-at="2022-04-01T11:49:40 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.PullReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="PullReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:49:40 IST" name="PullReport" finished-at="2022-04-01T11:50:02 IST" duration-ms="22022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- PullReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:02 IST" name="getResult" finished-at="2022-04-01T11:50:02 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=PullReport status=SUCCESS method=NetAgentProcess.PullReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:02 IST" name="testMethodName" finished-at="2022-04-01T11:50:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.TransactionReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="TransactionReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:02 IST" name="TransactionReport" finished-at="2022-04-01T11:50:33 IST" duration-ms="30407" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TransactionReport -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:33 IST" name="getResult" finished-at="2022-04-01T11:50:33 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TransactionReport status=SUCCESS method=NetAgentProcess.TransactionReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="OnHandReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:33 IST" name="OnHandReport" finished-at="2022-04-01T11:50:54 IST" duration-ms="21303" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OnHandReport -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:33 IST" name="testMethodName" finished-at="2022-04-01T11:50:33 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.OnHandReport() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:54 IST" name="getResult" finished-at="2022-04-01T11:50:54 IST" duration-ms="306" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OnHandReport status=SUCCESS method=NetAgentProcess.OnHandReport()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:54 IST" name="testMethodName" finished-at="2022-04-01T11:50:54 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.Userprofile() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="Userprofile()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:50:54 IST" name="Userprofile" finished-at="2022-04-01T11:51:00 IST" duration-ms="5618" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Userprofile -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:00 IST" name="getResult" finished-at="2022-04-01T11:51:00 IST" duration-ms="243" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Userprofile status=SUCCESS method=NetAgentProcess.Userprofile()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:00 IST" name="testMethodName" finished-at="2022-04-01T11:51:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.Userlist() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="Userlist()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:00 IST" name="Userlist" finished-at="2022-04-01T11:51:28 IST" duration-ms="28127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Userlist -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:28 IST" name="getResult" finished-at="2022-04-01T11:51:29 IST" duration-ms="180" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Userlist status=SUCCESS method=NetAgentProcess.Userlist()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:29 IST" name="testMethodName" finished-at="2022-04-01T11:51:29 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.MNXDoc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="MNXDoc()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:29 IST" name="MNXDoc" finished-at="2022-04-01T11:51:38 IST" duration-ms="9118" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MNXDoc -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:38 IST" name="getResult" finished-at="2022-04-01T11:51:38 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MNXDoc status=SUCCESS method=NetAgentProcess.MNXDoc()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="MileageCalc()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:38 IST" name="MileageCalc" finished-at="2022-04-01T11:51:49 IST" duration-ms="11602" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MileageCalc -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:38 IST" name="testMethodName" finished-at="2022-04-01T11:51:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.MileageCalc() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:49 IST" name="getResult" finished-at="2022-04-01T11:51:50 IST" duration-ms="148" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=MileageCalc status=SUCCESS method=NetAgentProcess.MileageCalc()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="UserPreference()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:50 IST" name="UserPreference" finished-at="2022-04-01T11:52:02 IST" duration-ms="12140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- UserPreference -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:51:50 IST" name="testMethodName" finished-at="2022-04-01T11:51:50 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void NetAgentSmoke.NetAgentProcess.UserPreference() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:52:02 IST" name="getResult" finished-at="2022-04-01T11:52:02 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=UserPreference status=SUCCESS method=NetAgentProcess.UserPreference()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:52:02 IST" name="testMethodName" finished-at="2022-04-01T11:52:02 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void NetAgentSmoke.NetAgentProcess.TaskLog() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="TaskLog()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T11:52:02 IST" name="TaskLog" finished-at="2022-04-01T12:00:24 IST" duration-ms="501684" status="FAIL">
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <button class="btn btn-primary bluebutton" id="btnRTE...2" ng-click="BindTaskLogRTE('RTE', TaskLog, 'Basic', false, true)">Search</button> is not clickable at point (485, 163). Other element would receive the click: <a id="idQuarantine" report="" class="submenuhide" ;="" href="/NAQuarantine">...</a>
  (Session info: chrome=100.0.4896.60)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'SIPL92', ip: '10.212.130.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.60, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\RPRAJA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51989}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 302144b21379e73e4a226bb37323e3d3]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <button class="btn btn-primary bluebutton" id="btnRTE...2" ng-click="BindTaskLogRTE('RTE', TaskLog, 'Basic', false, true)">Search</button> is not clickable at point (485, 163). Other element would receive the click: <a id="idQuarantine" report="" class="submenuhide" ;="" href="/NAQuarantine">...</a>
  (Session info: chrome=100.0.4896.60)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:48'
System info: host: 'SIPL92', ip: '10.212.130.163', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '16.0.2'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 100.0.4896.60, chrome: {chromedriverVersion: 100.0.4896.60 (6a5d10861ce8..., userDataDir: C:\Users\RPRAJA~1\AppData\L...}, goog:chromeOptions: {debuggerAddress: localhost:51989}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}
Session ID: 302144b21379e73e4a226bb37323e3d3
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at NetAgentSmoke.TaskLog.taskLog(TaskLog.java:767)
at NetAgentSmoke.NetAgentProcess.TaskLog(NetAgentProcess.java:3907)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TaskLog -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:00:24 IST" name="getResult" finished-at="2022-04-01T12:00:24 IST" duration-ms="227" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TaskLog status=FAILURE method=NetAgentProcess.TaskLog()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="testMethodName(java.lang.reflect.Method)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:00:24 IST" name="testMethodName" finished-at="2022-04-01T12:00:24 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public static void NetAgentSmoke.NetAgentProcess.orderProcessing() throws org.apache.poi.EncryptedDocumentException,org.apache.poi.openxml4j.exceptions.InvalidFormatException,java.io.IOException,java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMethodName -->
        <test-method signature="orderProcessing()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:00:24 IST" name="orderProcessing" finished-at="2022-04-01T12:01:14 IST" duration-ms="50038" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- orderProcessing -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:01:14 IST" name="getResult" finished-at="2022-04-01T12:01:14 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=orderProcessing status=SUCCESS method=NetAgentProcess.orderProcessing()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="Complete()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:01:14 IST" name="Complete" finished-at="2022-04-01T12:01:15 IST" duration-ms="411" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Complete -->
        <test-method is-config="true" signature="SendEmail()[pri:0, instance:NetAgentSmoke.NetAgentProcess@2ddc9a9f]" started-at="2022-04-01T12:01:15 IST" name="SendEmail" finished-at="2022-04-01T12:01:17 IST" duration-ms="2445" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- SendEmail -->
      </class> <!-- NetAgentSmoke.NetAgentProcess -->
    </test> <!-- NASmoke -->
  </suite> <!-- NASuite -->
</testng-results>
